<?php

namespace AppBundle\Repository;

/**
 * ArticleRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ArticleRepository extends \Doctrine\ORM\EntityRepository {

    public function getArticleByIdWithJoin($id) {
        $qb = $this->createQueryBuilder('a');
        $qb->leftJoin('a.image', 'i')
                ->addSelect('i')
                ->leftJoin('a.commentaires', 'c')
                ->addSelect('c')
                ->leftJoin('a.tags', 't')
                ->addSelect('t')
                ->where('a.id = ?1')
                ->setParameter(1, $id)
                ->orderBy('a.date', 'DESC');

        $query = $qb->getQuery();
        $article = $query->getOneOrNullResult();
        return $article;
    }

    public function getArticles() {
        $qb = $this->createQueryBuilder('a');
        $qb->leftJoin('a.image', 'i')
                ->addSelect('i')
                ->leftJoin('a.commentaires', 'c')
                ->addSelect('c')
                ->leftJoin('a.tags', 't')
                ->addSelect('t')
                ->orderBy('a.date', 'DESC');

        $query = $qb->getQuery();
        $articles = $query->getArrayResult();


        return $articles;
    }

    public function getArticlesByTagWithJoin($tag) {
        $qb = $this->createQueryBuilder('a');
        $qb->leftJoin('a.image', 'i')
                ->addSelect('i')
                ->leftJoin('a.commentaires', 'c')
                ->addSelect('c')
                ->leftJoin('a.tags', 't')
                ->addSelect('t')
                ->where('t = ?1')
                ->andWhere('a.publication = 1')
                ->setParameter(1, $tag)
                ->orderBy('a.date', 'DESC');

        $query = $qb->getQuery();
        $articles = $query->getArrayResult();


        return $articles;
    }

    public function getCountByTag($tag) {

        $qb = $this->createQueryBuilder('a');
        $qb->select('count(a)')
                ->leftJoin('a.tags', 't')
                ->where('t = ?1')
                ->andWhere('a.publication = 1')
                ->setParameter(1, $tag)
                ->orderBy('a.date', 'DESC');



        return $qb->getQuery()->getSingleScalarResult();
    }

}
